<%include ../partials/header%>
<script src="/ckeditor/ckeditor.js"></script>
</head>

<body>
    <div id="wrapper">
        <%include ../partials/menu%>
        <div id="page-wrapper">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="page-header">Tin Tức</h1>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <style>
                            label {
                                color: #fff;
                                font-size: 20px;
                                margin-top: 20px;
                            }
                        </style>
                        <div class="card-block">
                            <form data-parsley-validate id="uploadimage" enctype="multipart/form-data"
                                action="/admin/baiviet/thembv" method="post">
                                <div class="form-group">
                                    <label>Tiêu đề</label>
                                    <input class="form-control" name="title" placeholder="Nhập vào tiêu đề">
                                </div>
                                <div class="form-group">
                                    <label>Loại Tin</label>
                                    <select name="type_name" class="form-control" id="controlSelect">
                                        <option value="">---Chọn loại tin---</option>
                                        <% data.types.forEach(function (i){ %>
                                        <option value="<%=i.type_id%>">
                                            <%=i.type_name%>
                                        </option>
                                        <% }) %>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label>Tóm tắt</label>
                                    <textarea name="description" class="form-control" rows="5"></textarea>
                                </div>
                                <div class="form-group">
                                    <label>Nội dung</label>
                                    <textarea id="ckeditor" name="content" class="form-control" rows="10"
                                        id="noidung"></textarea>
                                </div>
                                <div class="form-group">
                                    <label>Ảnh</label>
                                    <br>
                                    <label>
                                        <input type="file" class="form-control" name="image" id="file" required />
                                    </label>
                                    <div id="status_upload"></div>
                                    <div class="preview">
                                        <div class="imgpreview" align="center">
                                            <img id="previewing" src="" />
                                        </div>
                                        <div class="message" style="color: #fff;"></div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Tags</label></br>
                                    <div class="tags-input" data-name="tags"></div>
                                </div>

                                <button type="reset" class="btn btn-default">Làm mới</button>
                                <button type="submit" value="Upload" class="btn btn-primary submit">Thêm</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- DataTables JavaScript -->
    <script src="/admin/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="/admin/vendor/datatables-plugins/dataTables.bootstrap.min.js"></script>
    <script src="/admin/vendor/datatables-responsive/dataTables.responsive.js"></script>
    <!-- Custom Theme JavaScript -->
    <script src="/admin/dist/js/sb-admin-2.js"></script>
    <!-- ckeditor -->
    <!-- Page-Level Demo Scripts - Tables - Use for reference -->
    <script type="text/javascript">
        var roxyFileman = '/file-manager.html?integration=ckeditor';
        CKEDITOR.replace('ckeditor', {
            filebrowserBrowseUrl: roxyFileman,
            filebrowserImageBrowseUrl: roxyFileman + '&type=image',
            removeDialogTabs: 'link:upload;image:upload'
        });
    </script>
    <script>
        var message = document.getElementsByClassName("message")[0];
        var file_upload = document.getElementById('file');
        // hiển thị ảnh nếu validation thành công
        file_upload.addEventListener('change', function (e) {
            var file = this.files[0];
            var imagefile = file.type;
            var match = ["image/jpeg", "image/png", "image/jpg"];
            if (!((imagefile == match[0]) || (imagefile == match[1]) ||
                (imagefile == match[2]))) {
                message.innerHTML = "File phải có định dạng jpeg, jpg and png";
                document.getElementById('previewing').style.display = "none";
                return false;
            } else {
                message.innerHTML = "Chấp nhận";
                var reader = new FileReader();
                reader.onload = function imageIsLoaded(e) {
                    var previewing = document.getElementById('previewing');
                    previewing.style.display = "block";
                    previewing.setAttribute('src', e.target.result);
                    previewing.setAttribute('width', '320px');
                    previewing.setAttribute('height', '230px');
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
    </script>
    <script>
        [].forEach.call(document.getElementsByClassName('tags-input'), function (el) {
            let hiddenInput = document.createElement('input'),
                mainInput = document.createElement('input'),
                tags = [];

            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', el.getAttribute('data-name'));

            mainInput.setAttribute('type', 'text');
            mainInput.classList.add('main-input');
            mainInput.addEventListener('input', function () {
                let enteredTags = mainInput.value.split(',');
                if (enteredTags.length > 1) {
                    enteredTags.forEach(function (t) {
                        let filteredTag = filterTag(t);
                        if (filteredTag.length > 0)
                            addTag(filteredTag);
                    });
                    mainInput.value = '';
                }
            });

            mainInput.addEventListener('keydown', function (e) {
                let keyCode = e.which || e.keyCode;
                if (keyCode === 8 && mainInput.value.length === 0 && tags.length > 0) {
                    removeTag(tags.length - 1);
                }
            });

            el.appendChild(mainInput);
            el.appendChild(hiddenInput);

            function addTag(text) {
                let tag = {
                    text: text,
                    element: document.createElement('span'),
                };

                tag.element.classList.add('tag');
                tag.element.textContent = tag.text;

                let closeBtn = document.createElement('span');
                closeBtn.classList.add('close');
                closeBtn.addEventListener('click', function () {
                    removeTag(tags.indexOf(tag));
                });
                tag.element.appendChild(closeBtn);

                tags.push(tag);

                el.insertBefore(tag.element, mainInput);

                refreshTags();
            }

            function removeTag(index) {
                let tag = tags[index];
                tags.splice(index, 1);
                el.removeChild(tag.element);
                refreshTags();
            }

            function refreshTags() {
                let tagsList = [];
                tags.forEach(function (t) {
                    tagsList.push(t.text);
                });
                hiddenInput.value = tagsList.join(',');
            }

            function filterTag(tag) {
                return tag.trim();
            }
        });
        
    </script>
</body>